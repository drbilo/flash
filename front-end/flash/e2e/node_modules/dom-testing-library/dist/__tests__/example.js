"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _ = require("../");

require("jest-dom/extend-expect");

var _document = _interopRequireDefault(require("./helpers/document"));

// query utilities:
// adds special assertions like toHaveTextContent
function getExampleDOM() {
  // This is just a raw example of setting up some DOM
  // that we can interact with. Swap this with your UI
  // framework of choice ðŸ˜‰
  const div = _document.default.createElement('div');

  div.innerHTML = `
    <label for="username">Username</label>
    <input id="username" />
    <button>Print Username</button>
  `;
  const button = div.querySelector('button');
  const input = div.querySelector('input');
  button.addEventListener('click', () => {
    // let's pretend this is making a server request, so it's async
    // (you'd want to mock this imaginary request in your unit tests)...
    setTimeout(() => {
      const printedUsernameContainer = _document.default.createElement('div');

      printedUsernameContainer.innerHTML = `
        <div data-testid="printed-username">${input.value}</div>
      `;
      div.appendChild(printedUsernameContainer);
    }, Math.floor(Math.random() * 200));
  });
  return div;
}

test('examples of some things', async () => {
  const famousWomanInHistory = 'Ada Lovelace';
  const container = getExampleDOM(); // Get form elements by their label text.
  // An error will be thrown if one cannot be found (accessibility FTW!)

  const input = (0, _.getByLabelText)(container, 'Username');
  input.value = famousWomanInHistory; // Get elements by their text, just like a real user does.

  (0, _.getByText)(container, 'Print Username').click();
  await (0, _.wait)(() => expect((0, _.queryByTestId)(container, 'printed-username')).toBeTruthy()); // getByTestId and queryByTestId are an escape hatch to get elements
  // by a test id (could also attempt to get this element by it's text)

  expect((0, _.getByTestId)(container, 'printed-username')).toHaveTextContent(famousWomanInHistory);
  expect(container).toMatchSnapshot();
});