"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var uuid_1 = require("uuid");
var encoding_1 = require("./encoding");
var nilRegex = /^[0]{8}-[0]{4}-[0]{4}-[0]{4}-[0]{12}$/i;
var anyRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
var base62Regex = /^[0-9a-z]{22}$/i;
function genUuid() {
    return uuid_1.v4();
}
exports.genUuid = genUuid;
function isString(str) {
    return typeof str === "string" || str instanceof String;
}
exports.isString = isString;
function isNilUuid(str) {
    return nilRegex.test(str);
}
exports.isNilUuid = isNilUuid;
function isUuid(str) {
    return anyRegex.test(str) || nilRegex.test(str);
}
exports.isUuid = isUuid;
function isCompactUuid(str) {
    return base62Regex.test(str);
}
exports.isCompactUuid = isCompactUuid;
function compactUuid(uuid) {
    if (isCompactUuid(uuid)) {
        return uuid;
    }
    else if (!isUuid(uuid)) {
        throw new Error("not a uuid");
    }
    return encoding_1.encode(uuid);
}
exports.compactUuid = compactUuid;
function expandUuid(str) {
    if (isUuid(str)) {
        return str;
    }
    else if (!isCompactUuid(str)) {
        throw new Error("not a compact uuid");
    }
    return encoding_1.decode(str);
}
exports.expandUuid = expandUuid;
