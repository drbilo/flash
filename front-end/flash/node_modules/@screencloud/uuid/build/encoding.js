"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * es5 original class here https://github.com/franksrevenge/uuid-encoder/
 */
var big_integer_1 = __importDefault(require("big-integer"));
var Bases;
(function (Bases) {
    Bases["BASE_62"] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    Bases["BASE_58"] = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
    Bases["BASE_36"] = "0123456789abcdefghijklmnopqrstuvwxyz";
    Bases["BASE_32"] = "0123456789abcdefghjkmnpqrstvwxyz";
    Bases["BASE_16"] = "0123456789abcdef";
    Bases["BASE_10"] = "0123456789";
    // BASE_2 = "01",
})(Bases = exports.Bases || (exports.Bases = {}));
function encode(uuid, encStr) {
    if (encStr === void 0) { encStr = Bases.BASE_62; }
    var cleanUuid = uuid.replace(/-/g, "");
    var base = encStr.length;
    var iUuid = big_integer_1.default(cleanUuid, 16);
    var str = "";
    do {
        str = encStr.substr(iUuid.mod(base).valueOf(), 1) + str;
        iUuid = iUuid.divide(base);
    } while (iUuid.greater(0));
    return str;
}
exports.encode = encode;
function decode(str, encStr) {
    if (encStr === void 0) { encStr = Bases.BASE_62; }
    var iUuid = big_integer_1.default(0);
    var base = encStr.length;
    var len = str.length;
    var isCaseSensitive = encStr.toLowerCase() !== encStr;
    var finalStr = (isCaseSensitive)
        ? str
        : str.toLowerCase();
    for (var pos = 0; pos < len; pos += 1) {
        var ch = finalStr.substr(pos, 1);
        var encPos = encStr.indexOf(ch);
        if (encPos < 0) {
            throw new Error("Invalid encoded data");
        }
        iUuid = iUuid.add(encPos);
        if (pos < len - 1) {
            iUuid = iUuid.multiply(base);
        }
    }
    var uuid = iUuid.toString(16).padStart(32, "0");
    return uuid.substr(0, 8) + "-" + uuid.substr(8, 4) + "-" + uuid.substr(12, 4) + "-" + uuid.substr(16, 4) + "-" + uuid.substr(20);
}
exports.decode = decode;
