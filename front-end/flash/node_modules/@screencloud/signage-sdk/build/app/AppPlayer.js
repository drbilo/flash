"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// Event ActionHandler base shared
var app_core_1 = require("@screencloud/app-core");
var messages_1 = require("../messages");
var AppPlayer = /** @class */ (function (_super) {
    __extends(AppPlayer, _super);
    function AppPlayer(handlers, bridge) {
        return _super.call(this, handlers || {}, bridge || new app_core_1.PostMessageBridge()) || this;
    }
    AppPlayer.prototype.connect = function () {
        return _super.prototype.connect.call(this, false);
    };
    AppPlayer.prototype.emitFinished = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppMessages.Finished.type,
        });
    };
    AppPlayer.prototype.emitLog = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppMessages.Log.type,
        });
    };
    AppPlayer.prototype.emitFinishing = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppMessages.Finishing.type,
        });
    };
    AppPlayer.prototype.emitInitialized = function () {
        this.emit({
            type: messages_1.AppMessages.Initialized.type,
        });
    };
    AppPlayer.prototype.emitPreloaded = function () {
        this.emit({
            type: messages_1.AppMessages.Preloaded.type,
        });
    };
    AppPlayer.prototype.emitShowing = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppMessages.Showing.type,
        });
    };
    AppPlayer.prototype.emitStarted = function () {
        this.emit({
            type: messages_1.AppMessages.Started.type,
        });
    };
    AppPlayer.prototype.onInitialize = function (handler) {
        return this.on(messages_1.AppPlayerMessages.Initialize.type, handler);
    };
    AppPlayer.prototype.onStart = function (handler) {
        return this.on(messages_1.AppPlayerMessages.Start.type, handler);
    };
    AppPlayer.prototype.onStateUpdated = function (handler) {
        return this.on(messages_1.AppPlayerMessages.StateUpdated.type, handler);
    };
    AppPlayer.prototype.onFinish = function (handler) {
        return this.on(messages_1.AppPlayerMessages.Finish.type, handler);
    };
    AppPlayer.prototype.requestAuthToken = function (payload) {
        return this.request({
            payload: payload,
            type: messages_1.AppMessages.RequestAuthToken.type,
        });
    };
    return AppPlayer;
}(app_core_1.MessageApp));
exports.AppPlayer = AppPlayer;
//# sourceMappingURL=AppPlayer.js.map