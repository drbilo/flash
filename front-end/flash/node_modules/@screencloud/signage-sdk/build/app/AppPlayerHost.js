"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var app_core_1 = require("@screencloud/app-core");
var messages_1 = require("../messages");
var AppPlayerHost = /** @class */ (function (_super) {
    __extends(AppPlayerHost, _super);
    function AppPlayerHost(handlers, bridge) {
        return _super.call(this, handlers || {}, bridge || new app_core_1.PostMessageBridge()) || this;
    }
    AppPlayerHost.prototype.connect = function () {
        return _super.prototype.connect.call(this, true);
    };
    AppPlayerHost.prototype.emitInitialize = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppPlayerMessages.Initialize.type,
        });
    };
    AppPlayerHost.prototype.emitStart = function () {
        this.emit({
            type: messages_1.AppPlayerMessages.Start.type,
        });
    };
    AppPlayerHost.prototype.emitStateUpdated = function (payload) {
        this.emit({
            payload: payload,
            type: messages_1.AppPlayerMessages.StateUpdated.type,
        });
    };
    AppPlayerHost.prototype.emitFinish = function () {
        this.emit({
            type: messages_1.AppPlayerMessages.Finish.type,
        });
    };
    AppPlayerHost.prototype.onInitialized = function (handler) {
        return this.on(messages_1.AppMessages.Initialized.type, handler);
    };
    AppPlayerHost.prototype.onPreloaded = function (handler) {
        return this.on(messages_1.AppMessages.Preloaded.type, handler);
    };
    AppPlayerHost.prototype.onStarted = function (handler) {
        return this.on(messages_1.AppMessages.Started.type, handler);
    };
    AppPlayerHost.prototype.onShowing = function (handler) {
        return this.on(messages_1.AppMessages.Showing.type, handler);
    };
    AppPlayerHost.prototype.onFinishing = function (handler) {
        return this.on(messages_1.AppMessages.Finishing.type, handler);
    };
    AppPlayerHost.prototype.onFinished = function (handler) {
        return this.on(messages_1.AppMessages.Finished.type, handler);
    };
    AppPlayerHost.prototype.onLog = function (handler) {
        return this.on(messages_1.AppMessages.Log.type, handler);
    };
    AppPlayerHost.prototype.onRequestAuthToken = function (handler) {
        return this.on(messages_1.AppMessages.RequestAuthToken.type, handler);
    };
    return AppPlayerHost;
}(app_core_1.MessageApp));
exports.AppPlayerHost = AppPlayerHost;
//# sourceMappingURL=AppPlayerHost.js.map