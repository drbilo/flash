import { IBridge, MessageApp } from "@screencloud/app-core";
import { EditorMessages, EditorPlayerMessages } from "../messages";
import { IEditorPlayerMessageHandlers } from "./types";
export interface IEditorPlayer {
    onInitialize(handler: EditorMessages.Initialize.Handler): this;
    emitInitialized(): void;
    emitConfigUpdateAvailable(): void;
    requestFileUpload(payload: EditorPlayerMessages.RequestFileUpload.Payload): Promise<EditorPlayerMessages.RequestFileUpload.Response>;
    requestMedia(payload: EditorPlayerMessages.RequestMedia.Payload): Promise<EditorPlayerMessages.RequestMedia.Response>;
    requestAuthToken(payload: EditorPlayerMessages.RequestAuthToken.Payload): Promise<EditorPlayerMessages.RequestAuthToken.Response>;
}
export declare class EditorPlayer extends MessageApp implements IEditorPlayer {
    constructor(handlers?: IEditorPlayerMessageHandlers, bridge?: IBridge);
    emitInitialized(): void;
    emitConfigUpdateAvailable(): void;
    onInitialize(handler: EditorMessages.Initialize.Handler): this;
    onConfigUpdated(handler: EditorMessages.ConfigUpdated.Handler): this;
    onRequestConfigUpdate(handler: EditorMessages.RequestConfigUpdate.Handler): this;
    requestFileUpload(): Promise<EditorPlayerMessages.RequestFileUpload.Response>;
    requestAuthToken(payload: EditorPlayerMessages.RequestAuthToken.Payload): Promise<EditorPlayerMessages.RequestAuthToken.Response>;
    requestMedia(payload: EditorPlayerMessages.RequestMedia.Payload): Promise<EditorPlayerMessages.RequestMedia.Response>;
}
