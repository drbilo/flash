import { IBridge, MessageApp } from "@screencloud/app-core";
import { EditorMessages, EditorPlayerMessages } from "../messages";
import { IEditorPlayerHostMessageHandlers } from "./types";
export interface IEditorPlayerHost {
    emitInitialize(payload: EditorMessages.Initialize.Payload): void;
    emitConfigUpdated(): void;
    onInitialized(handler: EditorPlayerMessages.Initialized.Handler): this;
    onRequestMedia(handler: EditorPlayerMessages.RequestMedia.Handler): this;
    onRequestFileUpload(handler: EditorPlayerMessages.RequestFileUpload.Handler): this;
    onRequestAuthToken(handler: EditorPlayerMessages.RequestAuthToken.Handler): this;
    requestConfigUpdate(payload: EditorMessages.RequestConfigUpdate.Payload): Promise<EditorMessages.RequestConfigUpdate.Response>;
}
export declare class EditorPlayerHost extends MessageApp implements IEditorPlayerHost {
    constructor(handlers?: IEditorPlayerHostMessageHandlers, bridge?: IBridge);
    connect(): Promise<void>;
    emitInitialize(payload: EditorMessages.Initialize.Payload): void;
    emitConfigUpdated(): void;
    onInitialized(handler: EditorPlayerMessages.Initialized.Handler): this;
    onConfigUpdateAvailable(handler: EditorPlayerMessages.ConfigUpdateAvailable.Handler): this;
    onRequestMedia(handler: EditorPlayerMessages.RequestMedia.Handler): this;
    onRequestAuthToken(handler: EditorPlayerMessages.RequestAuthToken.Handler): this;
    onRequestFileUpload(handler: EditorPlayerMessages.RequestFileUpload.Handler): this;
    requestConfigUpdate(payload: EditorMessages.RequestConfigUpdate.Payload): Promise<EditorMessages.RequestConfigUpdate.Response>;
}
